From 1af60fd968595f114134e3cf1cc0171577058cf0 Mon Sep 17 00:00:00 2001
From: Etaash Mathamsetty
 <45927311+Etaash-mathamsetty@users.noreply.github.com>
Date: Fri, 27 Jun 2025 16:22:01 -0400
Subject: [PATCH 152/166] winewayland: Add error message for cross process
 rendering.

---
 dlls/winewayland.drv/opengl.c | 7 +++++++
 dlls/winewayland.drv/vulkan.c | 7 +++++++
 2 files changed, 14 insertions(+)

diff --git a/dlls/winewayland.drv/opengl.c b/dlls/winewayland.drv/opengl.c
index 9d0aba68370..c6a84a4f1bd 100644
--- a/dlls/winewayland.drv/opengl.c
+++ b/dlls/winewayland.drv/opengl.c
@@ -199,6 +199,7 @@ static struct wayland_gl_drawable *wayland_gl_drawable_create(HWND hwnd, int for
 {
     struct wayland_gl_drawable *gl;
     int client_width, client_height;
+    DWORD tid, pid;
     RECT client_rect = {0};
     const EGLint attribs[] = {EGL_PRESENT_OPAQUE_EXT, EGL_TRUE, EGL_NONE};
 
@@ -221,6 +222,12 @@ static struct wayland_gl_drawable *wayland_gl_drawable_create(HWND hwnd, int for
      * target render surface. */
     if (!(gl->client = get_client_surface(hwnd))) goto err;
 
+    tid = NtUserGetWindowThread(hwnd, &pid);
+    if (tid && pid != GetCurrentProcessId())
+    {
+        ERR("Cross process rendering is not supported!\n");
+    }
+
     gl->wl_egl_window = wl_egl_window_create(gl->client->wl_surface,
                                              client_width, client_height);
     if (!gl->wl_egl_window)
diff --git a/dlls/winewayland.drv/vulkan.c b/dlls/winewayland.drv/vulkan.c
index 03d1ad09db5..97b611dc980 100644
--- a/dlls/winewayland.drv/vulkan.c
+++ b/dlls/winewayland.drv/vulkan.c
@@ -69,6 +69,7 @@ static void wine_vk_surface_destroy(struct wayland_client_surface *client)
 static VkResult wayland_vulkan_surface_create(HWND hwnd, const struct vulkan_instance *instance, VkSurfaceKHR *surface, void **private)
 {
     VkResult res;
+    DWORD pid, tid;
     VkWaylandSurfaceCreateInfoKHR create_info_host;
     struct wayland_client_surface *client;
 
@@ -80,6 +81,12 @@ static VkResult wayland_vulkan_surface_create(HWND hwnd, const struct vulkan_ins
         return VK_ERROR_OUT_OF_HOST_MEMORY;
     }
 
+    tid = NtUserGetWindowThread(hwnd, &pid);
+    if (tid && pid != GetCurrentProcessId())
+    {
+        ERR("Cross process rendering is not supported!\n");
+    }
+
     create_info_host.sType = VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR;
     create_info_host.pNext = NULL;
     create_info_host.flags = 0; /* reserved */
-- 
2.50.0

