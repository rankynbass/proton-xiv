From 60e8d1cc2c4f7e4757442ba6290e6398a54b2bc5 Mon Sep 17 00:00:00 2001
From: Etaash Mathamsetty
 <45927311+Etaash-mathamsetty@users.noreply.github.com>
Date: Fri, 20 Jun 2025 16:53:50 -0400
Subject: [PATCH 115/166] fixup! opengl32: Support map buffer offsets

---
 dlls/opengl32/unix_wgl.c | 42 +++++++++++++++++-----------------------
 1 file changed, 18 insertions(+), 24 deletions(-)

diff --git a/dlls/opengl32/unix_wgl.c b/dlls/opengl32/unix_wgl.c
index 8c4aada8dfd..9877eedd146 100644
--- a/dlls/opengl32/unix_wgl.c
+++ b/dlls/opengl32/unix_wgl.c
@@ -1924,7 +1924,7 @@ static void get_named_buffer_sub_data( TEB *teb, GLuint buffer, GLintptr offset,
 }
 
 static NTSTATUS wow64_map_buffer( TEB *teb, GLint buffer, GLenum target, void *ptr, SIZE_T size,
-                                  GLbitfield access, PTR32 *ret )
+                                  GLintptr offset, GLbitfield access, PTR32 *ret )
 {
     static unsigned int once;
 
@@ -1937,9 +1937,9 @@ static NTSTATUS wow64_map_buffer( TEB *teb, GLint buffer, GLenum target, void *p
 
             TRACE( "Copying %#zx from buffer at %p to wow64 buffer %p\n", size, ptr, UlongToPtr(*ret) );
             if (buffer)
-                get_named_buffer_sub_data( teb, buffer, 0, size, UlongToPtr(*ret) );
+                get_named_buffer_sub_data( teb, buffer, offset, size, UlongToPtr(*ret) );
             else
-                get_buffer_sub_data( teb, target, 0, size, UlongToPtr(*ret) );
+                get_buffer_sub_data( teb, target, offset, size, UlongToPtr(*ret) );
         }
 
         return STATUS_SUCCESS;
@@ -1977,27 +1977,17 @@ static GLbitfield map_range_flags_from_map_flags( GLenum flags )
     }
 }
 
-static NTSTATUS wow64_unmap_buffer( TEB *teb, void *ptr, void *wow_ptr, GLenum target, SIZE_T size, GLbitfield access )
+static NTSTATUS wow64_unmap_buffer( TEB *teb, void *ptr, void *wow_ptr, GLuint buffer, GLenum target, SIZE_T size, GLintptr offset,  GLbitfield access )
 {
     if (ULongToPtr(PtrToUlong(ptr)) == ptr) return STATUS_SUCCESS;  /* we're lucky */
 
     if (access & GL_MAP_WRITE_BIT)
     {
         TRACE( "Copying %#zx from wow64 buffer %p to buffer %p\n", size, wow_ptr, ptr );
-        buffer_sub_data(teb, target, 0, size, wow_ptr);
-    }
-
-    return STATUS_INVALID_ADDRESS;
-}
-
-static NTSTATUS wow64_unmap_buffer_named( TEB *teb, void *ptr, void *wow_ptr, GLuint buffer, SIZE_T size, GLbitfield access )
-{
-    if (ULongToPtr(PtrToUlong(ptr)) == ptr) return STATUS_SUCCESS;  /* we're lucky */
-
-    if (access & GL_MAP_WRITE_BIT)
-    {
-        TRACE( "Copying %#zx from wow64 buffer %p to buffer %p\n", size, wow_ptr, ptr );
-        named_buffer_sub_data(teb, buffer, 0, size, wow_ptr);
+        if (buffer)
+            named_buffer_sub_data(teb, buffer, offset, size, wow_ptr);
+        else
+            buffer_sub_data(teb, target, offset, size, wow_ptr);
     }
 
     return STATUS_INVALID_ADDRESS;
@@ -2104,7 +2094,7 @@ static NTSTATUS wow64_gl_map_buffer( void *args, NTSTATUS (*gl_map_buffer64)(voi
     }
     else if ((status = gl_map_buffer64( &params ))) return status;
 
-    status = wow64_map_buffer( params.teb, 0, params.target, params.ret, 0,
+    status = wow64_map_buffer( params.teb, 0, params.target, params.ret, 0, 0,
                                map_range_flags_from_map_flags( params.access ), &params32->ret );
     if (wow_ptr)
     {
@@ -2163,7 +2153,7 @@ NTSTATUS wow64_ext_glMapBufferRange( void *args )
     }
     else if ((status = ext_glMapBufferRange( &params ))) return status;
 
-    status = wow64_map_buffer( params.teb, 0, params.target, params.ret, params.length, params.access, &params32->ret );
+    status = wow64_map_buffer( params.teb, 0, params.target, params.ret, params.length, params.offset, params.access, &params32->ret );
 
     if (wow_ptr)
     {
@@ -2209,7 +2199,7 @@ static NTSTATUS wow64_gl_map_named_buffer( void *args, NTSTATUS (*gl_map_named_b
     }
     else if ((status = gl_map_named_buffer64( &params ))) return status;
 
-    status = wow64_map_buffer( params.teb, params.buffer, 0, params.ret, 0,
+    status = wow64_map_buffer( params.teb, params.buffer, 0, params.ret, 0, 0,
                                map_range_flags_from_map_flags( params.access ), &params32->ret );
     if (wow_ptr)
     {
@@ -2268,7 +2258,7 @@ static NTSTATUS wow64_gl_map_named_buffer_range( void *args, NTSTATUS (*gl_map_n
     }
     else if ((status = gl_map_named_buffer_range64( &params ))) return status;
 
-    status = wow64_map_buffer( params.teb, params.buffer, 0, params.ret, params.length, params.access, &params32->ret );
+    status = wow64_map_buffer( params.teb, params.buffer, 0, params.ret, params.length, params.offset, params.access, &params32->ret );
 
     if (wow_ptr)
     {
@@ -2310,6 +2300,7 @@ static NTSTATUS wow64_gl_unmap_buffer( void *args, NTSTATUS (*gl_unmap_buffer64)
     };
     PTR32 *ptr;
     void *wow_ptr;
+    GLintptr offset;
     GLint size, flags;
     NTSTATUS status;
 
@@ -2319,12 +2310,13 @@ static NTSTATUS wow64_gl_unmap_buffer( void *args, NTSTATUS (*gl_unmap_buffer64)
     wow_ptr = UlongToPtr(*ptr);
     size = get_buffer_param( params.teb, params.target, GL_BUFFER_MAP_LENGTH );
     flags = get_buffer_param( params.teb, params.target, GL_BUFFER_ACCESS_FLAGS );
+    offset = get_buffer_param( params.teb, params.target, GL_BUFFER_MAP_OFFSET );
 
     /* copy original data back before unmap */
     *ptr = *(PTR32 *)wow_ptr;
 
     gl_unmap_buffer64( &params );
-    status = wow64_unmap_buffer( params.teb, ptr, wow_ptr, params.target, size, flags );
+    status = wow64_unmap_buffer( params.teb, ptr, wow_ptr, 0, params.target, size, offset, flags );
     params32->ret = params.ret;
 
     return status;
@@ -2356,6 +2348,7 @@ static NTSTATUS wow64_gl_unmap_named_buffer( void *args, NTSTATUS (*gl_unmap_nam
     };
     PTR32 *ptr;
     void *wow_ptr;
+    GLintptr offset;
     GLint size, flags;
     NTSTATUS status;
 
@@ -2365,12 +2358,13 @@ static NTSTATUS wow64_gl_unmap_named_buffer( void *args, NTSTATUS (*gl_unmap_nam
     wow_ptr = UlongToPtr(*ptr);
     size = get_named_buffer_param( params.teb, params.buffer, GL_BUFFER_MAP_LENGTH );
     flags = get_named_buffer_param( params.teb, params.buffer, GL_BUFFER_ACCESS_FLAGS );
+    offset = get_named_buffer_param( params.teb, params.buffer, GL_BUFFER_MAP_OFFSET );
 
     /* copy original data back before unmap */
     *ptr = *(PTR32 *)wow_ptr;
 
     gl_unmap_named_buffer64( &params );
-    status = wow64_unmap_buffer_named( params.teb, ptr, wow_ptr, params.buffer, size, flags);
+    status = wow64_unmap_buffer( params.teb, ptr, wow_ptr, params.buffer, 0, size, offset, flags);
     params32->ret = params.ret;
 
     return status;
-- 
2.50.0

