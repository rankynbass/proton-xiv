From 2bebe5ad2f4fdfbed090b5b7c52759efd28eec88 Mon Sep 17 00:00:00 2001
From: Etaash Mathamsetty
 <45927311+Etaash-mathamsetty@users.noreply.github.com>
Date: Mon, 2 Jun 2025 17:45:42 -0400
Subject: [PATCH 078/166] winewayland: Don't scale raw input values.

---
 dlls/winewayland.drv/wayland_pointer.c | 21 +++++++++++++--------
 1 file changed, 13 insertions(+), 8 deletions(-)

diff --git a/dlls/winewayland.drv/wayland_pointer.c b/dlls/winewayland.drv/wayland_pointer.c
index 4dd1fab1c31..2d70881982b 100644
--- a/dlls/winewayland.drv/wayland_pointer.c
+++ b/dlls/winewayland.drv/wayland_pointer.c
@@ -116,7 +116,7 @@ static HWND wayland_pointer_get_focused_hwnd(void)
     return hwnd;
 }
 
-static void pointer_handle_motion_internal(wl_fixed_t sx, wl_fixed_t sy)
+static void pointer_handle_motion_internal(wl_fixed_t sx, wl_fixed_t sy, uint32_t time)
 {
     INPUT input = {0};
     RECT *window_rect;
@@ -152,6 +152,7 @@ static void pointer_handle_motion_internal(wl_fixed_t sx, wl_fixed_t sy)
     wayland_win_data_release(data);
 
     input.type = INPUT_MOUSE;
+    input.mi.time = time;
     input.mi.dx = screen.x;
     input.mi.dy = screen.y;
     input.mi.dwFlags = MOUSEEVENTF_MOVE | MOUSEEVENTF_ABSOLUTE;
@@ -190,7 +191,7 @@ static void pointer_handle_motion(void *data, struct wl_pointer *wl_pointer,
     /* Ignore absolute motion events if in relative mode. */
     if (pointer->zwp_relative_pointer_v1) return;
 
-    pointer_handle_motion_internal(sx, sy);
+    pointer_handle_motion_internal(sx, sy, time);
 }
 
 static void wayland_set_cursor(HWND hwnd, HCURSOR hcursor, BOOL use_hcursor);
@@ -223,7 +224,7 @@ static void pointer_handle_enter(void *data, struct wl_pointer *wl_pointer,
     /* Handle the enter as a motion, to account for cases where the
      * window first appears beneath the pointer and won't get a separate
      * motion event. */
-    pointer_handle_motion_internal(sx, sy);
+    pointer_handle_motion_internal(sx, sy, 0);
 }
 
 static void pointer_handle_leave(void *data, struct wl_pointer *wl_pointer,
@@ -410,6 +411,7 @@ static const struct wl_pointer_listener pointer_listener =
  *
  * Converts the surface-local delta to window (logical) coordinate delta.
  */
+/*
 static void wayland_motion_delta_to_window(struct wayland_surface *surface,
                                            double surface_x, double surface_y,
                                            double *window_x, double *window_y)
@@ -417,6 +419,7 @@ static void wayland_motion_delta_to_window(struct wayland_surface *surface,
     *window_x = surface_x * surface->window.scale;
     *window_y = surface_y * surface->window.scale;
 }
+*/
 
 static void relative_pointer_v1_relative_motion(void *private,
                                                 struct zwp_relative_pointer_v1 *zwp_relative_pointer_v1,
@@ -429,15 +432,16 @@ static void relative_pointer_v1_relative_motion(void *private,
     struct wayland_win_data *data;
     double screen_x = 0.0, screen_y = 0.0;
     struct wayland_pointer *pointer = &process_wayland.pointer;
+    ULONG64 time_us = ((ULONG64)utime_hi << 32) | utime_lo;
 
     if (!(hwnd = wayland_pointer_get_focused_hwnd())) return;
     if (!(data = wayland_win_data_get(hwnd))) return;
 
-    /* Use "raw" input by default. However, it's not nessessarily raw */
-    wayland_motion_delta_to_window(data->wayland_surface,
-                                   wl_fixed_to_double(dx_unaccel),
-                                   wl_fixed_to_double(dy_unaccel),
-                                   &screen_x, &screen_y);
+    /* Use "raw" input by default. However, it's not nessessarily raw.
+       Additionally, we don't need to scale this value
+    */
+    screen_x = wl_fixed_to_double(dx_unaccel);
+    screen_y = wl_fixed_to_double(dy_unaccel);
     wayland_win_data_release(data);
 
     pthread_mutex_lock(&pointer->mutex);
@@ -446,6 +450,7 @@ static void relative_pointer_v1_relative_motion(void *private,
     pointer->accum_y += screen_y;
 
     input.type = INPUT_MOUSE;
+    input.mi.time = time_us / 1000;
     input.mi.dx = round(pointer->accum_x);
     input.mi.dy = round(pointer->accum_y);
     input.mi.dwFlags = MOUSEEVENTF_MOVE;
-- 
2.50.0

